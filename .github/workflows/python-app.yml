name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  job1:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    steps:
        - uses: actions/checkout@v3
        - name: Set up Python 3.10
          uses: actions/setup-python@v3
          with:
            python-version: "3.10"
        - name: Install Poetry Action
          uses: snok/install-poetry@v1.3.4
          with:
            virtualenvs-create: true
            virtualenvs-in-project: false
            installer-parallel: true
        - name: Install dependencies
          run: |
           poetry install --no-root
        - name: Cache build venv
          id: cached-poetry-dependencies
          uses: actions/cache@v3
          with:
            path: /home/runner/.cache/pypoetry/virtualenvs
            key: ${{ runner.os }}-venv
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
        - name: Install Poetry Action
          uses: snok/install-poetry@v1.3.4
          with:
            virtualenvs-create: true
            virtualenvs-in-project: false
            installer-parallel: true
        - name: Cache build venv
          id: cached-poetry-dependencies
          uses: actions/cache@v3
          with:
            path: /home/runner/.cache/pypoetry/virtualenvs
            key: ${{ runner.os }}-venv
        - name: Poetry test
          run: |
            poetry run task test
        - name: Poetry lint
          run: |
            poetry run task lint
        - name: Poetry formatter
          run: |
            poetry run task formatter
        - name: Poetry security
          run: |
            poetry run task security 

    
